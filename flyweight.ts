class Person {  private type: string;  private x: number;  private y: number;  constructor(type: string) {    this.type = type;  }  public setX(x: number) {    this.x = x;  }  public setY(y: number) {    this.y = y;  }  public show(): void {    console.log(`Type: ${this.type}, x: ${this.x}, y: ${this.y}`);  }}class PersonFactory {  private static personList: { [type: string]: Person } = {};  public static getPerson(type: string) {    let person: Person = this.personList[type];    if (!person) {      person = new Person(type);      this.personList[type] = person;      console.log(`Created a person of type: ${type}`);    }    return person;  }}// How to use:const types = ["Man", "Woman", "Child"];for(let i=0; i<10 ; i++) {  const person: Person = PersonFactory.getPerson(getRandomType());  person.setX(getRandomX());  person.setY(getRandomY());  person.show();}function getRandomType() {  return types[Math.floor(Math.random()*3)];}function getRandomX() {  return (Math.floor(Math.random()*100 ));}function getRandomY() {  return (Math.floor(Math.random()*100));}