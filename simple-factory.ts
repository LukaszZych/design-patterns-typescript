enum ChocolateType { White, Dark }// Main interface grouping similar classesinterface Chocolate {  displayColor(): void;}// First classclass WhiteChocolate implements Chocolate {  displayColor() {    console.log('White color!');  };}// Second classclass DarkChocolate implements Chocolate {  displayColor() {    console.log('Dark color!');  }}// Factory for creating the chocolateclass ChocolateFactory {  createChocolate(chocolateType: ChocolateType): Chocolate {    switch (chocolateType) {      case ChocolateType.White: return new WhiteChocolate();      case ChocolateType.Dark: return new DarkChocolate();      default: throw new Error('Not implemented type');    }  }}// How to use:const chocolateFactory: ChocolateFactory = new ChocolateFactory();const bialaCzekolada: Chocolate = chocolateFactory.createChocolate(ChocolateType.White);bialaCzekolada.displayColor();